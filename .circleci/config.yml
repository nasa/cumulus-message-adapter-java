# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: cumuluss/openjdk:8-py37

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/message_parser

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "message_parser/pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn -f message_parser/pom.xml dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "message_parser/pom.xml" }}

      # run tests!
      - run: mvn -f message_parser/pom.xml integration-test

      - run:
          name: Publish release
          command: |
            GITHUB_TOKEN=${GITHUB_TOKEN} sh scripts/release.sh

  deploy:
    docker:
      # specify the version you desire here
      - image: cumuluss/openjdk:8-py37

    working_directory: ~/message_parser

    steps:
      - checkout

      # publish to clojars
      - run: mvn -s .circleci/.circleci.settings.xml -f message_parser/pom.xml deploy

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          context:
            - cumulus-packages
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
          context:
            - cumulus-packages
